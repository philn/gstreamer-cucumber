initSidebarItems({"attr":[["given","Attribute to auto-wire the test to the `World` implementer."],["then","Attribute to auto-wire the test to the `World` implementer."],["when","Attribute to auto-wire the test to the `World` implementer."]],"derive":[["Parameter","In addition to default parameters of Cucumber Expressions, you may implement and use custom ones."],["WorldInit","Derive macro for tests auto-wiring."]],"enum":[["ScenarioType","Type determining whether `Scenario`s should run concurrently or sequentially."]],"mod":[["cli","Tools for composing CLI options."],["codegen","Helper type-level glue for [`cucumber_codegen`] crate."],["event","Key occurrences in a lifecycle of Cucumber execution."],["feature","[`gherkin::Feature`] extension."],["gherkin","A Gherkin parser for the Cucumber test framework."],["parser","Tools for parsing Gherkin files."],["runner","Tools for executing `Step`s."],["step","Definitions for a [`Collection`] which is used to store `Step` [`Fn`]s and corresponding [`Regex`] patterns."],["tag","Extension of a [`TagOperation`]."],["writer","Tools for outputting `Cucumber` events."]],"struct":[["Cucumber","Top-level Cucumber executor."],["Event","Arbitrary event, optionally paired with additional metadata."]],"trait":[["ArbitraryWriter","[`Writer`] that also can output an arbitrary `Value` in addition to regular `Cucumber` events."],["FailureWriter","[`Writer`] tracking a number of `Failed` `Step`s and parsing errors."],["Parameter","Custom parameter of a Cucumber Expression."],["Parser","Source of parsed `Feature`s."],["Runner","Executor of `Parser` output producing `Cucumber` events for `Writer`."],["World","Represents a shared user-defined state for a Cucumber run. It lives on per-scenario basis."],["WorldInit","[`World`] extension with auto-wiring capabilities."],["Writer","Writer of `Cucumber` events to some output."],["WriterExt","Extension of [`Writer`] allowing its normalization and summarization."]],"type":[["Step","Alias for a [`gherkin::Step`] function that returns a [`LocalBoxFuture`]."]]});